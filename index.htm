<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Список User Scripts</title>
    <style>
        body {
            background-color: #1a1a1a;
            color: #ffffff;
            font-family: Arial, sans-serif;
            margin: 20px;
        }
        h1 {
            color: #00ccff;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        th, td {
            padding: 10px;
            text-align: left;
            border-bottom: 1px solid #444;
        }
        th {
            background-color: #2a2a2a;
            color: #00ccff;
            cursor: pointer;
        }
        th:hover {
            background-color: #3a3a3a;
        }
        tr:hover {
            background-color: #333;
        }
        a {
            color: #00ccff;
            text-decoration: none;
        }
        a:hover {
            text-decoration: underline;
        }
        .sort-asc::after {
            content: ' ▲';
        }
        .sort-desc::after {
            content: ' ▼';
        }
        .icon {
            width: 16px;
            height: 16px;
            vertical-align: middle;
            margin-right: 5px;
        }
    </style>
</head>
<body>
    <h1>Доступные User Scripts</h1>
    <table id="scriptsTable">
        <thead>
            <tr>
                <th data-sort="name">Название</th>
                <th data-sort="version">Версия</th>
                <th data-sort="author">Автор</th>
                <th data-sort="description">Описание</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
    <script>
        const table = document.getElementById('scriptsTable');
        const headers = table.querySelectorAll('th');
        let sortDirection = {};
        
        headers.forEach(header => {
            header.addEventListener('click', () => {
                const sortKey = header.getAttribute('data-sort');
                const isAsc = !sortDirection[sortKey] || sortDirection[sortKey] === 'desc';
                sortDirection[sortKey] = isAsc ? 'asc' : 'desc';
                
                // Удаляем классы сортировки
                headers.forEach(h => {
                    h.classList.remove('sort-asc', 'sort-desc');
                });
                // Добавляем класс для текущей сортировки
                header.classList.add(isAsc ? 'sort-asc' : 'sort-desc');
                
                // Сортировка строк
                const tbody = table.querySelector('tbody');
                const rows = Array.from(tbody.querySelectorAll('tr'));
                
                rows.sort((a, b) => {
                    let aText = a.querySelector(`td:nth-child(${[...headers].indexOf(header) + 1})`).textContent;
                    let bText = b.querySelector(`td:nth-child(${[...headers].indexOf(header) + 1})`).textContent;
                    // Для столбца "Название" убираем текст ссылки, оставляя только имя
                    if (sortKey === 'name') {
                        aText = a.querySelector('td:nth-child(1) a').textContent;
                        bText = b.querySelector('td:nth-child(1) a').textContent;
                    }
                    return isAsc ? aText.localeCompare(bText) : bText.localeCompare(aText);
                });
                
                // Перестраиваем таблицу
                tbody.innerHTML = '';
                rows.forEach(row => tbody.appendChild(row));
            });
        });
    </script>
</body>
</html>
